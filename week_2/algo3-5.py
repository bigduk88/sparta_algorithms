'''
2609문제 - 최대공약수와 최소공배수 - 정수론 및 조합론 
- 유클리드 알고리즘: 2개의 자연수, 정식의 최대공약수를 구하는 알고리즘. 호제법: 두 수가 서로 상대방 수를 나누어서 결국 원하는 수를 얻는 알고지름. (유클리드 호제법)
두 수 a와 b (a > b)가 있다고 할 때, a와 b의 최대공약수 G는 b와 a%b(a를 b로 나눈 나머지)의 최대공약수 G와 서로 같다.
예시 입력으로 보면,
gcd(24, 18) = gcd(18, 6) = gcd(6, 0)인 것이다!
여기서 b가 0이 되는 순간의 6이 바로 최대공약수가 된다.
이렇게 최대공약수를 쉽게 구하면, 최소공배수는 바로 구할 수 있다. 여기서 두 수 A와 B가 있다고 할 때, A와 B는 각각 x*gcd(a, b), y*gcd(a, b)이다. 따라서 A*B/gcd(a, b)를 해주면 최소공배수가 된다!
이 수가 최소공배수인 이유는 이 수를 A로 나눠도 나누어 떨어지고 B로 나눠도 나누어떨어지는 수 중에서 가장 작은 수이기 때문이다.
출처: https://suri78.tistory.com/36 [공부노트]

두 개의 자연수를 입력받아 최대 공약수와 최소 공배수를 출력하는 프로그램을 작성하시오.

입력
첫째 줄에는 두 개의 자연수가 주어진다. 이 둘은 10,000이하의 자연수이며 사이에 한 칸의 공백이 주어진다.

출력
첫째 줄에는 입력으로 주어진 두 수의 최대공약수를, 둘째 줄에는 입력으로 주어진 두 수의 최소 공배수를 출력한다.
'''

import sys 

A, B = map(int, sys.stdin.readline().split())   # 두 개의 자연수 입력(a,b<10000 공백으로 구분)
a, b = A, B                                     

while b != 0: 
    a = a % b                                   #a,b의 최대 공약수는 a%b의 최대공약수와 같다.
    a, b = b, a                                 

# gcd 최대공약수
print(a)                                        #
#lcm 최소공배수
print(A*B//a)                                   #

