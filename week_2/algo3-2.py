'''
11047문제 동전0 - 그리디 알고리즘
준규가 가지고 있는 동전은 총 N종류이고, 각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)

둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

출력
첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.
'''

n, k = map(int, input().split())                # 동전의 종류 n 가치의 합 k 입력
m = []                                          # 빈 리스트 m 선언
num = 0                                         # 값이 0인 변수 선언
for i in range(n):                              # 동전의 종류 만큼 for문 돌면서
    m.append(int(input()))                      # 리스트 m에 돈의 가치(1원 5원 10원 100원 등) 입력
for i in range(n - 1, -1, -1):                  # 액면가치 큰 화폐 순으로 for문 시작
    if k == 0:                                  # 구하려는 액수가 0이라면 num은 그대로 0이므로 반복문 끝
        break
    if m[i] > k:                                # i번째 지폐 액면가가 구하려는 액수보다 크다면 아래 코드를 실행하지 말고 다시 for문으로
        continue
    num += k // m[i]                            # num변수에 구하려는 액수 // 지폐 i번째 지폐 액면가의 몫을 더한다.
    k %= m[i]                                   # 구하려는 액수를 i번째 지폐 액면가로 나눈 나머지를 k에 입력한다.
print(num)                                      # 원하는 금액 // 지폐 액면가 = 몫이 저장된 num을 출력한다.