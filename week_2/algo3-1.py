'''
1932문제 정수 삼각형 - 동적계획법
        7
      3   8
    8   1   0
  2   7   4   4
4   5   2   6   5
위 그림은 크기가 5인 정수 삼각형의 한 모습이다.

맨 위층 7부터 시작해서 아래에 있는 수 중 하나를 선택하여 아래층으로 내려올 때, 이제까지 선택된 수의 합이 최대가 되는 경로를 구하는 프로그램을 작성하라. 아래층에 있는 수는 현재 층에서 선택된 수의 대각선 왼쪽 또는 대각선 오른쪽에 있는 것 중에서만 선택할 수 있다.

삼각형의 크기는 1 이상 500 이하이다. 삼각형을 이루고 있는 각 수는 모두 정수이며, 범위는 0 이상 9999 이하이다.

입력
첫째 줄에 삼각형의 크기 n(1 ≤ n ≤ 500)이 주어지고, 둘째 줄부터 n+1번째 줄까지 정수 삼각형이 주어진다.

출력
첫째 줄에 합이 최대가 되는 경로에 있는 수의 합을 출력한다.
                       7
                     10 15
                    18 16 15 
                   20 25 20 19
                  24 30 27 26 24
'''

n = int(input())                                                      # 삼각형의 크기 입력
t = []                                                                # 빈 리스트 선언

for i in range(n):                                                    # n번째 줄 까지의 정수 삼각형 입력하여 리스트 t에 입력
    t.append(list(map(int, input().split())))
k = 2                                                                
for i in range(1, n):                                                
    for j in range(k):                                                
        if j == 0:                                                    # 두 번째 줄부터 시작
            t[i][j] = t[i][j] + t[i - 1][j]                           # 맨 왼쪽 숫자와 맨 오른쪽 숫자는
        elif i == j:                                                  # 바로 자기 위 숫자를 더한다.
            t[i][j] = t[i][j] + t[i - 1][j - 1]
        else:                                                         # 왼쪽 위 숫자와 오른 쪽 위 숫자를 비교해서
            t[i][j] = max(t[i - 1][j - 1], t[i - 1][j]) + t[i][j]     # 더 큰 숫자를 더한다.
    k += 1                                                            # 줄 수 더하기
print(max(t[n - 1]))                                                  # 리스트 내 가장 큰 수를 출력한다.